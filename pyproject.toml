[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"


[project]
name = "cmdwerk"
version = "0.1.0"
readme = "README.md"
description = "A command-line tool for managing and executing commands"
authors = [
    {name = "Marilson Campos", email = "marilson.campos@gmail.com"},
]

classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
]


license = {file = "LICENSE"}

requires-python = ">=3.10"
dependencies = [
    "gitpython>=3.0.0,<4.0.0",
    "click>=8.0,<9.0",
    "progress>=1.4,<2.0",
    "prompt_toolkit>=3.0",
    "pyperclip>=1.8.2"
]

[tool.pdm]
package-type = "library"

[tool.pdm.dev-dependencies]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
]
lint = [
    "black>=23.7.0",
    "ruff>=0.0.285",
    "mypy>=1.5.0",
]
dev = [
    "pre-commit>=3.3.3",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
]


[project.scripts]
cmdw = "cmdwerk.cli:main"

[project.urls]
Homepage = "https://github.com/marilsoncampos/cmdwerk"
Documentation = "https://github.com/marilsoncampos/cmdwerk/blob/main/README.md"
Repository = "https://github.com/marilsoncampos/cmdwerk"

[tool.ruff]
line-length = 220
target-version = "py310"
select = ["E", "F", "B", "I", "UP"]
ignore = ["E402", "E741"]

[tool.ruff.isort]
known-first-party = ["cmdwerk"]

[tool.mypy]
python_version = "3.10"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_optional = true

[tool.pytest.ini_options]
python_files = ["tests.py", "tests_*.py", "test_*.py"]
junit_family = "xunit2"
testpaths = ["test/unit"]
norecursedirs = [
    "*.egg",
    ".eggs",
    "dist",
    "build",
    "docs",
    ".git",
    "__pycache__"
]

[tool.coverage.run]
branch = true
dynamic_context = "test_function"
source = ["cmdwerk"]
data_file = ".tests-reports/.coverage"

[tool.coverage.report]
skip_covered = true
show_missing = true
sort = "Cover"
exclude_lines = [
    "pragma: no cover",
    "if typing.TYPE_CHECKING",
    "if TYPE_CHECKING",
    "raise NotImplementedError"
]
